apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: vote
spec:
  selector:
    matchLabels:
      app: redis
  replicas: 1
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - image: redis:alpine
        name: redis
        volumeMounts:
        - mountPath: /data
          name: redis-data
      volumes:
      - name: redis-data
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: redis-v1
  namespace: vote
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
# Redis
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: redis-v1
  namespace: vote
spec:
  podSelector:
    matchLabels:
      app: redis
  listeners:
    - portMapping:
        port: 6379
        protocol: tcp
      # healthCheck:
      #   protocol: tcp
      #   path: '/'
      #   healthyThreshold: 2
      #   unhealthyThreshold: 2
      #   timeoutMillis: 2000
      #   intervalMillis: 5000
  serviceDiscovery:
    dns:
      hostname: redis.vote.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: redis
  namespace: vote
spec:
  awsName: redis.vote.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: redis-router
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  name: redis-router
  namespace: vote
spec:
  listeners:
    - portMapping:
        port: 6379
        protocol: http
  routes:
    - name: vote-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: redis-v1
              weight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: vote
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    name: tcp
