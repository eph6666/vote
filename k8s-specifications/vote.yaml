apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-v1
  namespace: vote
spec:
  selector:
    matchLabels:
      app: vote
      version: v1
  replicas: 1
  template:
    metadata:
      labels:
        app: vote
        version: v1
    spec:
      containers:
      - image: CONTAINER_IMAGE
        name: vote
---
apiVersion: v1
kind: Service
metadata:
  name: vote-v1
  namespace: vote
spec:
  type: ClusterIP
  ports:
  - name: "vote-service"
    port: 5000
    targetPort: 80
    nodePort: 31000
  selector:
    app: vote
    version: v1
---
# Vote mesh
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualNode
metadata:
  name: vote-v1
  namespace: vote
spec:
  podSelector:
    matchLabels:
      app: vote
      version: v1
  listeners:
    - portMapping:
        port: 5000
        protocol: http
      healthCheck:
        protocol: http
        path: '/version'
        healthyThreshold: 2
        unhealthyThreshold: 2
        timeoutMillis: 2000
        intervalMillis: 5000
  backends:
    - virtualService:
        virtualServiceRef:
          name: redis
  serviceDiscovery:
    dns:
      hostname: vote.vote.svc.cluster.local
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualService
metadata:
  name: vote
  namespace: vote
spec:
  awsName: vote.vote.svc.cluster.local
  provider:
    virtualRouter:
      virtualRouterRef:
        name: vote-router
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualRouter
metadata:
  name: vote-router
  namespace: vote
spec:
  listeners:
    - portMapping:
        port: 5000
        protocol: http
  routes:
    - name: vote-route
      httpRoute:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeRef:
                name: vote-v1
              weight: 100
---
apiVersion: v1
kind: Service
metadata:
  name: vote
  namespace: vote
  labels:
    app: vote
spec:
  ports:
  - port: 5000
    name: http
