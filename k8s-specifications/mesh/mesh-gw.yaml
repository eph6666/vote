# vote
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: vote-gw
  namespace: vote
spec:
  namespaceSelector:
    matchLabels:
      gateway: vote-gw
  podSelector:
    matchLabels:
      type: gateway
  listeners:
    - portMapping:
        port: 8443
        protocol: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vote-gw
  namespace: vote
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vote-gw
  template:
    metadata:
      annotations:
        appmesh.k8s.aws/sidecarInjectorWebhook: disabled
      labels:
        type: gateway
        app: vote-gw
    spec:
      containers:
        - env:
          - name: APPMESH_PREVIEW
            value: "0"
          - name: ENVOY_LOG_LEVEL
            value: info
          - name: ENVOY_ADMIN_ACCESS_PORT
            value: "9901"
          - name: ENVOY_ADMIN_ACCESS_LOG_FILE
            value: /tmp/envoy_admin_access.log
          - name: AWS_REGION
            value: us-east-1
          - name: APPMESH_VIRTUAL_NODE_NAME
            value: mesh/voting-app/virtualGateway/vote-gw_vote
          image: 840364872350.dkr.ecr.us-west-1.amazonaws.com/aws-appmesh-envoy:v1.15.1.0-prod
          imagePullPolicy: IfNotPresent
          name: envoy
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            exec:
              command:
              - sh
              - -c
              - curl -s http://localhost:9901/server_info | grep state | grep -q LIVE
---
apiVersion: v1
kind: Service
metadata:
  name: vote-gw
  namespace: vote
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 8443
      name: https
  selector:
    app: vote-gw
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: vote-gateway-route
  namespace: vote
spec:
  httpRoute:
    match:
      prefix: "/"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: vote
---
apiVersion: appmesh.k8s.aws/v1beta2
kind: GatewayRoute
metadata:
  name: result-gateway-route
  namespace: vote
spec:
  httpRoute:
    match:
      prefix: "/result"
    action:
      target:
        virtualService:
          virtualServiceRef:
            name: result
# ---
# apiVersion: appmesh.k8s.aws/v1beta2
# kind: GatewayRoute
# metadata:
#   name: stylesheets-gateway-route
#   namespace: vote
# spec:
#   httpRoute:
#     match:
#       prefix: "/stylesheets/style.css"
#     action:
#       target:
#         virtualService:
#           virtualServiceRef:
#             name: result
# ---
# apiVersion: appmesh.k8s.aws/v1beta2
# kind: GatewayRoute
# metadata:
#   name: js-gateway-route
#   namespace: vote
# spec:
#   httpRoute:
#     match:
#       prefix: "/app.js"
#     action:
#       target:
#         virtualService:
#           virtualServiceRef:
#             name: result
# ---
# apiVersion: appmesh.k8s.aws/v1beta2
# kind: GatewayRoute
# metadata:
#   name: socket-gateway-route
#   namespace: vote
# spec:
#   httpRoute:
#     match:
#       prefix: "/socket.io.js"
#     action:
#       target:
#         virtualService:
#           virtualServiceRef:
#             name: result
# ---
# apiVersion: appmesh.k8s.aws/v1beta2
# kind: GatewayRoute
# metadata:
#   name: favicon-gateway-route
#   namespace: vote
# spec:
#   httpRoute:
#     match:
#       prefix: "/favicon.ico"
#     action:
#       target:
#         virtualService:
#           virtualServiceRef:
#             name: result